#include <bits/stdc++.h>
using namespace std;

int main(){

	string name;
	int key,len;
	cout<<"Enter the input message"<<endl;
	cin>>name;
	cout<<"Enter the Rails"<<endl;
	cin>>key;
	char matrix[30][30];
	len = name.length();
	for(int i=0;i<key;i++){
		for(int j=0;j<len;j++){
			matrix[i][j] = '*';
		}
	}


	int k=0,l=0,temp=0,flag=0;
	 for(int i=0;i<len;i++){
		flag=0;
		temp=0;

		 if(k==0 || k==key-1){
			k=k*(-1);
		}
		//since matrix index cannot be negative whenever k value is -ve convert to positive and after computation convert it back to original value
		if(k<0){

			temp=k;
			k=k*(-1);
			flag=1;
		}
		matrix[k][i]=name[l];
		if(flag==1){
			k=temp;
		}
		l++;
		k++;
	}
	cout<<endl;

	//printing the railfence matrix obtained.Railfence matrix even stores white spaces if the input message is a sentence.
	printf("Railfence matrix is: \n");
	for(int i=0;i<key;i++){
		for(int j=0;j<len;j++){
			cout<<" "<<matrix[i][j];
		}
		cout<<endl;
	}

//code for encryption

	char str[100];
	int glo=0;
	//string the encrypted message from railfence matrix if the entry of the matrix is not '*'
	for(int i=0;i<key;i++){
		for(int j=0;j<len;j++){
			if(matrix[i][j] != '*'){
				str[glo++]=matrix[i][j];
			}
		}
	}


	//printing original message
	cout<<"original message is: "<<endl;
	cout<<""<<name<<endl;
	//printing encrypted message
	cout<<"encrypted message is: "<<endl;
	cout<<str<<endl;
	char dstr[100];
	int glob=0;



	printf("Railfence matrix is: \n");
	for(int i=0;i<key;i++)
	{
		for(int j=0;j<len;j++)
		{
			cout<<" "<<matrix[i][j];
		}
		cout<<endl;
	}

//code for decryption

	cout<<"Decrypted message is: "<<endl;
	int kk=0,temp1=0;
	for(int i=0;i<len;i++){
		temp1=0;
		flag=0;
		if(kk==0 || kk==key-1){
			kk=kk*(-1);
		}
		 if(kk<0){
			temp1=kk;
			kk=kk*(-1);
			flag=1;
		}
		//obtaining decrypted message from railfence matrix
		char ct=matrix[kk][i];
		 dstr[glob++]=ct;

		 if(flag==1){
		 	kk=temp1;
		 }
		 kk++;
	}


	//printing decrypted message
	for(int i=0;dstr[i] !='\0';i++){
		cout<<""<<dstr[i];
	}
	cout<<endl;
}
